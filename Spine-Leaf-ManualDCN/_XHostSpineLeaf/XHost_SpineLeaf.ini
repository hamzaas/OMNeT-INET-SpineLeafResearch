[General]
network = XHost_SpineLeaf_Network

ned-path = ..;../../inet-4.2.0u/inet4.2.0Untouched/src;../../inet-4.2.0u/inet4.2.0Untouched/examples;../../inet-4.2.0u/inet4.2.0Untouched/tutorials;../../inet-4.2.0u/inet4.2.0Untouched/showcases
load-libs = ../../inet-4.2.0u/inet4.2.0Untouched/src/libINET.dll
cmdenv-interactive = true

# Visualizer

**.LanVisualizer.interfaceTableVisualizer.displayInterfaceTables = true
**.LanVisualizer.interfaceTableVisualizer.displayWiredInterfacesAtConnections = false
**.LanVisualizer.interfaceTableVisualizer.nodeFilter = "not (*topOfRack or *H*)"
**.LanVisualizer.interfaceTableVisualizer.placementPriority = 2
**.LanVisualizer.interfaceTableVisualizer.format = "%N %\\%n/%l%\\%m"

**.LanVisualizer.packetDropVisualizer.displayPacketDrops = true
**.LanVisualizer.packetDropVisualizer.labelFormat = "%n/reason: %r"
**.LanVisualizer.packetDropVisualizer.fadeOutTime = 10s

**.LeafVisualizer.interfaceTableVisualizer.displayInterfaceTables = true
**.LeafVisualizer.interfaceTableVisualizer.displayWiredInterfacesAtConnections = false
**.LeafVisualizer.interfaceTableVisualizer.placementPriority = 2
**.LeafVisualizer.interfaceTableVisualizer.format = "%N %\\%n/%l%\\%m"

#Enable to run from command line
#**.configurator.config = xmldoc("../../OMNeT-INET-SpineLeafResearch/Spine-Leaf-ManualDCN/_XHostSpineLeaf/XHost_SpineLeaf_Routing.xml")
#Enable to run in GUI
**.configurator.config = xmldoc("XHost_SpineLeaf_Routing.xml")

#**.configurator.addStaticRoutes = false 		#-- Turns off automatically adding routes to routing tables, only look  at XML file routes.


############################################################################################################################################
#
#												Configurations 
#
############################################################################################################################################


[Config Ping]
description = "All Hosts ping border 10 times"

**.H[*].numApps = 1
**.H[*].app[0].typename = "PingApp"
**.H[*].app[0].destAddr = "leaf[0].H[0]"
**.H[*].app[0].count = 10







[Config Traffic_1]
description =  Large elephant data from every leaf (Apps = 1)

**.borderLeaf.**.packetCapacity = 1
**.leaf[*].**.packetCapacity = 1
**.spine[*].**.packetCapacity = 1

**.H[*].numApps = 1

**.border.numApps = 1

**.H[*].app[0].typename = "TcpSessionApp"
**.H[*].app[0].connectAddress = "border"
**.H[*].app[0].tOpen = 1.0s
**.H[*].app[0].tSend = 1.1s
**.H[*].app[0].sendBytes = 100000B
**.H[*].app[0].tClose = 0s

**.border.app[0].typename = "TcpEchoApp"






[Config Traffic_2]
description =  a lot of TcpSessionApplications

#Packet Capacity for all routers
**.borderLeaf.**.packetCapacity = 5
**.leaf[*].**.packetCapacity = 5
**.spine[*].**.packetCapacity = 5

#Number of apps for all hosts
**.H[*].numApps = 1
**.border.numApps = 1

#TcpSinkApp for all hosts (to handle any incoming packets)
**.border.app[0].typename = "TcpSinkApp"
**.H[*].app[0].typename = "TcpSinkApp"

#Border applications
#**.border.app[0].typename = 

#Host applications
**.H[1].app[1].typename = "TcpSessionApp"
**.H[1].app[1].connectAddress = "border"
**.H[1].app[1].sendScript = "bytePair"
	#for now we just have all other hosts do nothing








